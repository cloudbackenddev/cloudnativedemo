# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI pipeline

on:
  workflow_dispatch:

  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
env:
  DOCKER_IMAGE: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' && 'demo-app-staging' || 'demo-app-snap' }}

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: setup JDK and Maven
        uses: ./.github/actions/setup-java-maven
        with:
          java-version: '11'
      - name: run tests
        run: mvn -B test
  sonar:
    #Depends on test's job
    needs: tests
    name: SonarCloud analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup JDK and Maven
        uses: ./.github/actions/setup-java-maven
        with:
          java-version: '11'
      - name: Cache SonarCloud packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      #Analyze project with SonarCloud
      - name: Build and analyze
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=cloudnativedemo